{"ast":null,"code":"var _jsxFileName = \"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/menu/components/CatalogFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { colors } from \"../../../theme/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { addFilter, removeFilter } from \"../../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 12,\n    display: \"flex\",\n    cursor: \"pointer\",\n    alignItems: \"center\"\n  },\n  filter: {\n    marginLeft: 10,\n    fontWeight: 300\n  },\n  filterActive: {\n    fontWeight: 400\n  },\n  checkbox: {\n    minWidth: 20,\n    minHeight: 20,\n    border: `1px solid ${colors.secondary}`,\n    borderRadius: 5\n  },\n  checkboxActive: {\n    backgroundColor: colors.secondary\n  }\n});\nexport default function CatalogFilter({\n  filterName\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [selectedFilter, setSelectedFilter] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const activeFilters = useSelector(state => state.cards.filters);\n  useEffect(() => {\n    activeFilters.map((activeFilter, index) => {\n      activeFilter === filterName ? setCurrentIndex(index) : null;\n    });\n  }, [activeFilters]);\n\n  const handleSelect = name => {\n    setSelectedFilter(!selectedFilter);\n    selectedFilter ? addFilter(name) : removeFilter(currentIndex);\n    console.log(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => handleSelect(filterName),\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: clsx(classes.checkbox, selectedFilter && classes.checkboxActive)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: clsx(classes.filter, selectedFilter && classes.filterActive),\n      children: filterName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CatalogFilter, \"MRRBSDw/WWraT7j9SIJgTDROMnw=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = CatalogFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogFilter\");","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/menu/components/CatalogFilter.js"],"names":["React","useState","useEffect","makeStyles","colors","useDispatch","useSelector","clsx","addFilter","removeFilter","useStyles","root","marginTop","display","cursor","alignItems","filter","marginLeft","fontWeight","filterActive","checkbox","minWidth","minHeight","border","secondary","borderRadius","checkboxActive","backgroundColor","CatalogFilter","filterName","classes","selectedFilter","setSelectedFilter","currentIndex","setCurrentIndex","activeFilters","state","cards","filters","map","activeFilter","index","handleSelect","name","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,wBAAxC;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAC;AAC3BQ,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,MAAM,EAAE,SAHJ;AAIJC,IAAAA,UAAU,EAAE;AAJR,GADqB;AAO3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,EADN;AAENC,IAAAA,UAAU,EAAE;AAFN,GAPmB;AAW3BC,EAAAA,YAAY,EAAE;AACZD,IAAAA,UAAU,EAAE;AADA,GAXa;AAc3BE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,SAAS,EAAE,EAFH;AAGRC,IAAAA,MAAM,EAAG,aAAYnB,MAAM,CAACoB,SAAU,EAH9B;AAIRC,IAAAA,YAAY,EAAE;AAJN,GAdiB;AAoB3BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,eAAe,EAAEvB,MAAM,CAACoB;AADV;AApBW,CAAD,CAA5B;AAyBA,eAAe,SAASI,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAuC;AAAA;;AACpD,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsC/B,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACgC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMkC,aAAa,GAAG7B,WAAW,CAAE8B,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAxB,CAAjC;AAEApC,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,aAAa,CAACI,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,KAAyB;AACzCD,MAAAA,YAAY,KAAKX,UAAjB,GAA8BK,eAAe,CAACO,KAAD,CAA7C,GAAuD,IAAvD;AACD,KAFD;AAGD,GAJQ,EAIN,CAACN,aAAD,CAJM,CAAT;;AAMA,QAAMO,YAAY,GAAIC,IAAD,IAAU;AAC7BX,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAA,IAAAA,cAAc,GAAGvB,SAAS,CAACmC,IAAD,CAAZ,GAAqBlC,YAAY,CAACwB,YAAD,CAA/C;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,OAAO,EAAE,MAAMD,YAAY,CAACb,UAAD,CAAhC;AAA8C,IAAA,SAAS,EAAEC,OAAO,CAACnB,IAAjE;AAAA,4BACE;AACE,MAAA,SAAS,EAAEJ,IAAI,CACbuB,OAAO,CAACV,QADK,EAEbW,cAAc,IAAID,OAAO,CAACJ,cAFb;AADjB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,SAAS,EAAEnB,IAAI,CAACuB,OAAO,CAACd,MAAT,EAAiBe,cAAc,IAAID,OAAO,CAACX,YAA3C,CADjB;AAAA,gBAGGU;AAHH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAjCuBD,a;UACNlB,S,EAGMJ,W;;;KAJAsB,a","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { colors } from \"../../../theme/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { addFilter, removeFilter } from \"../../../redux/actions\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 12,\n    display: \"flex\",\n    cursor: \"pointer\",\n    alignItems: \"center\",\n  },\n  filter: {\n    marginLeft: 10,\n    fontWeight: 300,\n  },\n  filterActive: {\n    fontWeight: 400,\n  },\n  checkbox: {\n    minWidth: 20,\n    minHeight: 20,\n    border: `1px solid ${colors.secondary}`,\n    borderRadius: 5,\n  },\n  checkboxActive: {\n    backgroundColor: colors.secondary,\n  },\n});\n\nexport default function CatalogFilter({ filterName }) {\n  const classes = useStyles();\n  const [selectedFilter, setSelectedFilter] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const activeFilters = useSelector((state) => state.cards.filters);\n\n  useEffect(() => {\n    activeFilters.map((activeFilter, index) => {\n      activeFilter === filterName ? setCurrentIndex(index) : null;\n    });\n  }, [activeFilters]);\n\n  const handleSelect = (name) => {\n    setSelectedFilter(!selectedFilter);\n    selectedFilter ? addFilter(name) : removeFilter(currentIndex);\n    console.log(name);\n  };\n\n  return (\n    <div onClick={() => handleSelect(filterName)} className={classes.root}>\n      <span\n        className={clsx(\n          classes.checkbox,\n          selectedFilter && classes.checkboxActive\n        )}\n      ></span>\n      <h4\n        className={clsx(classes.filter, selectedFilter && classes.filterActive)}\n      >\n        {filterName}\n      </h4>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}