{"ast":null,"code":"import { PUSH_ITEM_CART, DEL_ITEM_CART, COUNT_TOTAL } from \"../types\";\nconst initialState = {\n  cart: [],\n  total: 0\n};\nexport const cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PUSH_ITEM_CART:\n      // return { ...state, cart: state.cart.concat(action.payload) };\n      return { ...state,\n        cart: [...state.cart, action.payload]\n      };\n\n    case DEL_ITEM_CART:\n      return { ...state,\n        cart: state.cart.filter(cartItem => cartItem.type !== action.payload.type)\n      };\n\n    case COUNT_TOTAL:\n      return { ...state,\n        total: state.total + action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/redux/reducers/cartReducer.js"],"names":["PUSH_ITEM_CART","DEL_ITEM_CART","COUNT_TOTAL","initialState","cart","total","cartReducer","state","action","type","payload","filter","cartItem"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,aAAzB,EAAwCC,WAAxC,QAA2D,UAA3D;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,cAAL;AACC;AACA,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAV,EAAgBI,MAAM,CAACE,OAAvB;AAAlB,OAAP;;AAED,SAAKT,aAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWO,MAAX,CACJC,QAAD,IAAcA,QAAQ,CAACH,IAAT,KAAkBD,MAAM,CAACE,OAAP,CAAeD,IAD1C;AAFA,OAAP;;AAOD,SAAKP,WAAL;AACC,aAAO,EAAE,GAAGK,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACE;AAAxC,OAAP;;AAED;AACC,aAAOH,KAAP;AAjBF;AAmBA,CApBM","sourcesContent":["import { PUSH_ITEM_CART, DEL_ITEM_CART, COUNT_TOTAL } from \"../types\";\n\nconst initialState = {\n\tcart: [],\n\ttotal: 0,\n};\n\nexport const cartReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase PUSH_ITEM_CART:\n\t\t\t// return { ...state, cart: state.cart.concat(action.payload) };\n\t\t\treturn { ...state, cart: [...state.cart, action.payload] };\n\n\t\tcase DEL_ITEM_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: state.cart.filter(\n\t\t\t\t\t(cartItem) => cartItem.type !== action.payload.type\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase COUNT_TOTAL:\n\t\t\treturn { ...state, total: state.total + action.payload };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}