{"ast":null,"code":"import { PUSH_ITEM_CART, DEL_ITEM_CART, COUNT_TOTAL, CHANGE_AMOUNT } from \"../types\";\nconst initialState = {\n  cart: [],\n  total: 0\n};\nexport const cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PUSH_ITEM_CART:\n      return { ...state,\n        cart: state.cart.concat(action.payload)\n      };\n\n    case DEL_ITEM_CART:\n      const newCart = [...cart];\n      newCart.splice(action.payload, 1);\n      return { ...state,\n        // cart: action.payload,\n        cart: newCart\n      };\n\n    case COUNT_TOTAL:\n      let counter = 0;\n      state.cart.map(singleCartItem => {\n        counter += singleCartItem.price * singleCartItem.amount;\n      });\n      return { ...state,\n        total: counter\n      };\n\n    case CHANGE_AMOUNT:\n      return { ...state,\n        cart: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/redux/reducers/cartReducer.js"],"names":["PUSH_ITEM_CART","DEL_ITEM_CART","COUNT_TOTAL","CHANGE_AMOUNT","initialState","cart","total","cartReducer","state","action","type","concat","payload","newCart","splice","counter","map","singleCartItem","price","amount"],"mappings":"AAAA,SACCA,cADD,EAECC,aAFD,EAGCC,WAHD,EAICC,aAJD,QAKO,UALP;AAOA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKV,cAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWM,MAAX,CAAkBF,MAAM,CAACG,OAAzB;AAFA,OAAP;;AAKD,SAAKX,aAAL;AACC,YAAMY,OAAO,GAAG,CAAC,GAAGR,IAAJ,CAAhB;AACAQ,MAAAA,OAAO,CAACC,MAAR,CAAeL,MAAM,CAACG,OAAtB,EAA+B,CAA/B;AACA,aAAO,EACN,GAAGJ,KADG;AAEN;AACAH,QAAAA,IAAI,EAAEQ;AAHA,OAAP;;AAMD,SAAKX,WAAL;AACC,UAAIa,OAAO,GAAG,CAAd;AACAP,MAAAA,KAAK,CAACH,IAAN,CAAWW,GAAX,CAAgBC,cAAD,IAAoB;AAClCF,QAAAA,OAAO,IAAIE,cAAc,CAACC,KAAf,GAAuBD,cAAc,CAACE,MAAjD;AACA,OAFD;AAGA,aAAO,EACN,GAAGX,KADG;AAENF,QAAAA,KAAK,EAAES;AAFD,OAAP;;AAKD,SAAKZ,aAAL;AACC,aAAO,EAAE,GAAGK,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACG;AAAzB,OAAP;;AAED;AACC,aAAOJ,KAAP;AA9BF;AAgCA,CAjCM","sourcesContent":["import {\n\tPUSH_ITEM_CART,\n\tDEL_ITEM_CART,\n\tCOUNT_TOTAL,\n\tCHANGE_AMOUNT,\n} from \"../types\";\n\nconst initialState = {\n\tcart: [],\n\ttotal: 0,\n};\n\nexport const cartReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase PUSH_ITEM_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: state.cart.concat(action.payload),\n\t\t\t};\n\n\t\tcase DEL_ITEM_CART:\n\t\t\tconst newCart = [...cart];\n\t\t\tnewCart.splice(action.payload, 1);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t// cart: action.payload,\n\t\t\t\tcart: newCart,\n\t\t\t};\n\n\t\tcase COUNT_TOTAL:\n\t\t\tlet counter = 0;\n\t\t\tstate.cart.map((singleCartItem) => {\n\t\t\t\tcounter += singleCartItem.price * singleCartItem.amount;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttotal: counter,\n\t\t\t};\n\n\t\tcase CHANGE_AMOUNT:\n\t\t\treturn { ...state, cart: action.payload };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}