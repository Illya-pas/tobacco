{"ast":null,"code":"import _regeneratorRuntime from\"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{FETCH_CARDS,MENU_WIDTH,PUSH_ITEM_CART,DEL_ITEM_CART,COUNT_TOTAL,CHANGE_AMOUNT,SET_LOCATION}from\"./types\";// export const fetchItems = (itemsType) => {\n// \treturn async (dispatch) => {\n// \t\tdispatch({ type: FETCH_CARDS, payload: {} });\n// \t};\n// };\nexport var changeWidthMenu=function changeWidthMenu(menuWidth){return function(dispatch){dispatch({type:MENU_WIDTH,payload:menuWidth});};};export var addToCart=function addToCart(itemCard,cart){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var copyItemCard,isInCart;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:copyItemCard=_objectSpread({},itemCard);// if (!copyItemCard.available) return;\nif(cart){isInCart=false;cart.map(function(cartItem,index){if(cartItem.id===copyItemCard.id){var newCart=_toConsumableArray(cart);copyItemCard.available&&(newCart[index].amount+=1);dispatch({type:CHANGE_AMOUNT,payload:newCart});dispatch({type:COUNT_TOTAL});isInCart=true;return;}});if(!isInCart){copyItemCard.available&&(copyItemCard.amount+=1);dispatch({type:PUSH_ITEM_CART,payload:copyItemCard});dispatch({type:COUNT_TOTAL});}}else{copyItemCard.available&&(copyItemCard.amount+=1);dispatch({type:PUSH_ITEM_CART,payload:copyItemCard});dispatch({type:COUNT_TOTAL});}case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var changeAmount=function changeAmount(inputValue,cart,index){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var counter,newCart;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:counter=0;newCart=cart;inputValue===\"\"?inputValue=0:inputValue=+inputValue;newCart[index].amount=inputValue;dispatch({type:CHANGE_AMOUNT,payload:newCart});dispatch({type:COUNT_TOTAL});case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var delFromCart=function delFromCart(cart,index){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var counter;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:counter=0;dispatch({type:DEL_ITEM_CART,payload:index});dispatch({type:COUNT_TOTAL});case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var changeLocation=function changeLocation(location){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch({type:SET_LOCATION,payload:location});case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/redux/actions.js"],"names":["FETCH_CARDS","MENU_WIDTH","PUSH_ITEM_CART","DEL_ITEM_CART","COUNT_TOTAL","CHANGE_AMOUNT","SET_LOCATION","changeWidthMenu","menuWidth","dispatch","type","payload","addToCart","itemCard","cart","copyItemCard","isInCart","map","cartItem","index","id","newCart","available","amount","changeAmount","inputValue","counter","delFromCart","changeLocation","location"],"mappings":"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","sourcesContent":["import {\n\tFETCH_CARDS,\n\tMENU_WIDTH,\n\tPUSH_ITEM_CART,\n\tDEL_ITEM_CART,\n\tCOUNT_TOTAL,\n\tCHANGE_AMOUNT,\n\tSET_LOCATION,\n} from \"./types\";\n\n// export const fetchItems = (itemsType) => {\n// \treturn async (dispatch) => {\n// \t\tdispatch({ type: FETCH_CARDS, payload: {} });\n// \t};\n// };\n\nexport const changeWidthMenu = (menuWidth) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: MENU_WIDTH, payload: menuWidth });\n\t};\n};\n\nexport const addToCart = (itemCard, cart) => {\n\treturn async (dispatch) => {\n\t\tconst copyItemCard = { ...itemCard };\n\t\t// if (!copyItemCard.available) return;\n\t\tif (cart) {\n\t\t\tlet isInCart = false;\n\t\t\tcart.map((cartItem, index) => {\n\t\t\t\tif (cartItem.id === copyItemCard.id) {\n\t\t\t\t\tconst newCart = [...cart];\n\t\t\t\t\tcopyItemCard.available && (newCart[index].amount += 1);\n\t\t\t\t\tdispatch({ type: CHANGE_AMOUNT, payload: newCart });\n\t\t\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t\t\t\tisInCart = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!isInCart) {\n\t\t\t\tcopyItemCard.available && (copyItemCard.amount += 1);\n\t\t\t\tdispatch({ type: PUSH_ITEM_CART, payload: copyItemCard });\n\t\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t\t}\n\t\t} else {\n\t\t\tcopyItemCard.available && (copyItemCard.amount += 1);\n\t\t\tdispatch({ type: PUSH_ITEM_CART, payload: copyItemCard });\n\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t}\n\t};\n};\n\nexport const changeAmount = (inputValue, cart, index) => {\n\treturn async (dispatch) => {\n\t\tlet counter = 0;\n\t\tconst newCart = cart;\n\t\tinputValue === \"\" ? (inputValue = 0) : (inputValue = +inputValue);\n\t\tnewCart[index].amount = inputValue;\n\t\tdispatch({ type: CHANGE_AMOUNT, payload: newCart });\n\t\tdispatch({ type: COUNT_TOTAL });\n\t};\n};\n\nexport const delFromCart = (cart, index) => {\n\treturn async (dispatch) => {\n\t\tlet counter = 0;\n\t\tdispatch({ type: DEL_ITEM_CART, payload: index });\n\t\tdispatch({ type: COUNT_TOTAL });\n\t};\n};\n\nexport const changeLocation = (location) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: SET_LOCATION, payload: location });\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}