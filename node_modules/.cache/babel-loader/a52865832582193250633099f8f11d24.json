{"ast":null,"code":"export const sorting = (items, filters) => {\n  let sorted = [...items];\n  let filterList;\n  let newList = [...items];\n  filters[0].filters.map(filtr => {\n    switch (filtr) {\n      case \"Бренд\":\n        filterList = items.map(item => {\n          return item.brand;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.brand === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Колір\":\n        filterList = items.map(item => {\n          return item.color;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.color === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Довжина\":\n        filterList = items.map(item => {\n          return item.paperLen;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.paperLen === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Ширина\":\n        filterList = items.map(item => {\n          return item.paperWidth;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.paperWidth === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Густота\":\n        filterList = items.map(item => {\n          return item.density;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.density === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Країна виробництва\":\n        filterList = items.map(item => {\n          return item.producer;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.producer === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Довжина гільзи\":\n        filterList = items.map(item => {\n          return item.hilzLen;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.hilzLen === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Довжина фільтру\":\n        filterList = items.map(item => {\n          return item.filterLen;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.filterLen === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Діаметр гільзи\":\n        filterList = items.map(item => {\n          return item.hilzDiametr;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.hilzDiametr === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Довжина фільтрів\":\n        filterList = items.map(item => {\n          return item.filtersLen;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.filtersLen === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Діаметр фільтрів\":\n        filterList = items.map(item => {\n          return item.filtersDiametr;\n          console.log(item.filtersDiametr);\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.filtersDiametr === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n\n      case \"Аромат\":\n        filterList = items.map(item => {\n          return item.aromat;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.aromat === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n        return;\n    }\n  });\n  return newList;\n};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/menu/components/Sorting.js"],"names":["sorting","items","filters","sorted","filterList","newList","map","filtr","item","brand","sort","sortedItem","index","oldIndex","filteredItem","color","paperLen","paperWidth","density","producer","hilzLen","filterLen","hilzDiametr","filtersLen","filtersDiametr","console","log","aromat"],"mappings":"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","sourcesContent":["export const sorting = (items, filters) => {\n\tlet sorted = [...items];\n\tlet filterList;\n\tlet newList = [...items];\n\n\tfilters[0].filters.map((filtr) => {\n\t\tswitch (filtr) {\n\t\t\tcase \"Бренд\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.brand;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.brand === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\tcase \"Колір\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.color;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.color === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Довжина\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.paperLen;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.paperLen === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Ширина\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.paperWidth;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.paperWidth === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Густота\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.density;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.density === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Країна виробництва\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.producer;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.producer === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Довжина гільзи\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.hilzLen;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.hilzLen === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Довжина фільтру\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.filterLen;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.filterLen === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Діаметр гільзи\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.hilzDiametr;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.hilzDiametr === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Довжина фільтрів\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.filtersLen;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.filtersLen === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Діаметр фільтрів\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.filtersDiametr;\n\t\t\t\t\tconsole.log(item.filtersDiametr);\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.filtersDiametr === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\n\t\t\tcase \"Аромат\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.aromat;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.aromat === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t}\n\t});\n\n\treturn newList;\n};\n"]},"metadata":{},"sourceType":"module"}