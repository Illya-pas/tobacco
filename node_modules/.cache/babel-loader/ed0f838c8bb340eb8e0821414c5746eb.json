{"ast":null,"code":"import _slicedToArray from\"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import{colors}from\"../../../theme/colors\";import{useDispatch,useSelector}from\"react-redux\";import clsx from\"clsx\";import{addFilter,removeFilter}from\"../../../redux/actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({root:{marginTop:12,display:\"flex\",cursor:\"pointer\",alignItems:\"center\"},filter:{marginLeft:10,fontWeight:300},filterActive:{fontWeight:400},checkbox:{minWidth:20,minHeight:20,border:\"1px solid \".concat(colors.secondary),borderRadius:5},checkboxActive:{backgroundColor:colors.secondary}});export default function CatalogFilter(_ref){var filterName=_ref.filterName;var classes=useStyles();var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),selectedFilter=_useState2[0],setSelectedFilter=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),currentIndex=_useState4[0],setCurrentIndex=_useState4[1];var activeFilters=useSelector(function(state){return state.cards.filters;});useEffect(function(){activeFilters.map(function(activeFilter,index){if(activeFilter===filterName){setCurrentIndex(index);setSelectedFilter(true);}});},[activeFilters]);var handleSelect=function handleSelect(name){setSelectedFilter(!selectedFilter);!selectedFilter?dispatch(addFilter(name)):dispatch(removeFilter(currentIndex));};return/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){return handleSelect(filterName);},className:classes.root,children:[/*#__PURE__*/_jsx(\"span\",{className:clsx(classes.checkbox,selectedFilter&&classes.checkboxActive)}),/*#__PURE__*/_jsx(\"h4\",{className:clsx(classes.filter,selectedFilter&&classes.filterActive),children:filterName})]});}","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/menu/components/CatalogFilter.js"],"names":["React","useState","useEffect","makeStyles","colors","useDispatch","useSelector","clsx","addFilter","removeFilter","useStyles","root","marginTop","display","cursor","alignItems","filter","marginLeft","fontWeight","filterActive","checkbox","minWidth","minHeight","border","secondary","borderRadius","checkboxActive","backgroundColor","CatalogFilter","filterName","classes","dispatch","selectedFilter","setSelectedFilter","currentIndex","setCurrentIndex","activeFilters","state","cards","filters","map","activeFilter","index","handleSelect","name"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,MAAT,KAAuB,uBAAvB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,OAASC,SAAT,CAAoBC,YAApB,KAAwC,wBAAxC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAAC,CAC3BQ,IAAI,CAAE,CACJC,SAAS,CAAE,EADP,CAEJC,OAAO,CAAE,MAFL,CAGJC,MAAM,CAAE,SAHJ,CAIJC,UAAU,CAAE,QAJR,CADqB,CAO3BC,MAAM,CAAE,CACNC,UAAU,CAAE,EADN,CAENC,UAAU,CAAE,GAFN,CAPmB,CAW3BC,YAAY,CAAE,CACZD,UAAU,CAAE,GADA,CAXa,CAc3BE,QAAQ,CAAE,CACRC,QAAQ,CAAE,EADF,CAERC,SAAS,CAAE,EAFH,CAGRC,MAAM,qBAAenB,MAAM,CAACoB,SAAtB,CAHE,CAIRC,YAAY,CAAE,CAJN,CAdiB,CAoB3BC,cAAc,CAAE,CACdC,eAAe,CAAEvB,MAAM,CAACoB,SADV,CApBW,CAAD,CAA5B,CAyBA,cAAe,SAASI,CAAAA,aAAT,MAAuC,IAAdC,CAAAA,UAAc,MAAdA,UAAc,CACpD,GAAMC,CAAAA,OAAO,CAAGpB,SAAS,EAAzB,CACA,GAAMqB,CAAAA,QAAQ,CAAG1B,WAAW,EAA5B,CAFoD,cAGRJ,QAAQ,CAAC,KAAD,CAHA,wCAG7C+B,cAH6C,eAG7BC,iBAH6B,8BAIZhC,QAAQ,CAAC,CAAD,CAJI,yCAI7CiC,YAJ6C,eAI/BC,eAJ+B,eAKpD,GAAMC,CAAAA,aAAa,CAAG9B,WAAW,CAAC,SAAC+B,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,CAAYC,OAAvB,EAAD,CAAjC,CAEArC,SAAS,CAAC,UAAM,CACdkC,aAAa,CAACI,GAAd,CAAkB,SAACC,YAAD,CAAeC,KAAf,CAAyB,CACzC,GAAID,YAAY,GAAKZ,UAArB,CAAiC,CAC/BM,eAAe,CAACO,KAAD,CAAf,CACAT,iBAAiB,CAAC,IAAD,CAAjB,CACD,CACF,CALD,EAMD,CAPQ,CAON,CAACG,aAAD,CAPM,CAAT,CASA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAU,CAC7BX,iBAAiB,CAAC,CAACD,cAAF,CAAjB,CACA,CAACA,cAAD,CACID,QAAQ,CAACvB,SAAS,CAACoC,IAAD,CAAV,CADZ,CAEIb,QAAQ,CAACtB,YAAY,CAACyB,YAAD,CAAb,CAFZ,CAGD,CALD,CAOA,mBACE,aAAK,OAAO,CAAE,yBAAMS,CAAAA,YAAY,CAACd,UAAD,CAAlB,EAAd,CAA8C,SAAS,CAAEC,OAAO,CAACnB,IAAjE,wBACE,aACE,SAAS,CAAEJ,IAAI,CACbuB,OAAO,CAACV,QADK,CAEbY,cAAc,EAAIF,OAAO,CAACJ,cAFb,CADjB,EADF,cAOE,WACE,SAAS,CAAEnB,IAAI,CAACuB,OAAO,CAACd,MAAT,CAAiBgB,cAAc,EAAIF,OAAO,CAACX,YAA3C,CADjB,UAGGU,UAHH,EAPF,GADF,CAeD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { colors } from \"../../../theme/colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { addFilter, removeFilter } from \"../../../redux/actions\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 12,\n    display: \"flex\",\n    cursor: \"pointer\",\n    alignItems: \"center\",\n  },\n  filter: {\n    marginLeft: 10,\n    fontWeight: 300,\n  },\n  filterActive: {\n    fontWeight: 400,\n  },\n  checkbox: {\n    minWidth: 20,\n    minHeight: 20,\n    border: `1px solid ${colors.secondary}`,\n    borderRadius: 5,\n  },\n  checkboxActive: {\n    backgroundColor: colors.secondary,\n  },\n});\n\nexport default function CatalogFilter({ filterName }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [selectedFilter, setSelectedFilter] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const activeFilters = useSelector((state) => state.cards.filters);\n\n  useEffect(() => {\n    activeFilters.map((activeFilter, index) => {\n      if (activeFilter === filterName) {\n        setCurrentIndex(index);\n        setSelectedFilter(true);\n      }\n    });\n  }, [activeFilters]);\n\n  const handleSelect = (name) => {\n    setSelectedFilter(!selectedFilter);\n    !selectedFilter\n      ? dispatch(addFilter(name))\n      : dispatch(removeFilter(currentIndex));\n  };\n\n  return (\n    <div onClick={() => handleSelect(filterName)} className={classes.root}>\n      <span\n        className={clsx(\n          classes.checkbox,\n          selectedFilter && classes.checkboxActive\n        )}\n      ></span>\n      <h4\n        className={clsx(classes.filter, selectedFilter && classes.filterActive)}\n      >\n        {filterName}\n      </h4>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}