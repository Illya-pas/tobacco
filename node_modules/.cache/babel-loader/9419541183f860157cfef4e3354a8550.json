{"ast":null,"code":"var _jsxFileName = \"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/header/components/Nav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport CustomButton from '../../menuItems/CustomButton';\nimport { colors } from '../../../theme/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  nav: {\n    display: \"flex\"\n  }\n});\nexport default function Nav({\n  headerHeight\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [buttons, setButtons] = useState([{\n    name: \"Головна\",\n    link: \"/\",\n    active: true\n  }, {\n    name: \"Про Нас\",\n    link: \"/about\",\n    active: false\n  }, {\n    name: \"Контакти\",\n    link: \"/contacts\",\n    active: false\n  }, {\n    name: \"Відгуки\",\n    link: \"/feedbacks\",\n    active: false\n  }]);\n  let buttonStyles = {\n    fontWeight: 700,\n    fontSize: 25,\n    height: headerHeight,\n    width: 120,\n    fontFamily: 'Open Sans Condensed'\n  };\n\n  function setActive(id) {\n    let butts = buttons;\n    buttons.map((butt, index) => {\n      butts[index].active = false;\n      butts[id].active = true;\n    });\n    setButtons(butts);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: classes.nav,\n    children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(NavLink, {\n      to: button.link,\n      children: /*#__PURE__*/_jsxDEV(CustomButton, {\n        primary: colors.primary,\n        secondary: colors.secondary,\n        text: button.name,\n        styles: buttonStyles,\n        action: () => setActive(index),\n        open: button.active,\n        enabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"wFS1fhoqumet1R6wzHu+YJQx1E8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/header/components/Nav.js"],"names":["React","useState","makeStyles","NavLink","CustomButton","colors","useStyles","nav","display","Nav","headerHeight","classes","buttons","setButtons","name","link","active","buttonStyles","fontWeight","fontSize","height","width","fontFamily","setActive","id","butts","map","butt","index","button","primary","secondary"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC5BK,EAAAA,GAAG,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AADuB,CAAD,CAA5B;AAMA,eAAe,SAASC,GAAT,CAAa;AAACC,EAAAA;AAAD,CAAb,EAA6B;AAAA;;AAC1C,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CACtC;AACCa,IAAAA,IAAI,EAAE,SADP;AAECC,IAAAA,IAAI,EAAE,GAFP;AAGCC,IAAAA,MAAM,EAAE;AAHT,GADsC,EAMtC;AACCF,IAAAA,IAAI,EAAE,SADP;AAECC,IAAAA,IAAI,EAAE,QAFP;AAGCC,IAAAA,MAAM,EAAE;AAHT,GANsC,EAWtC;AACCF,IAAAA,IAAI,EAAE,UADP;AAECC,IAAAA,IAAI,EAAE,WAFP;AAGCC,IAAAA,MAAM,EAAE;AAHT,GAXsC,EAgBtC;AACCF,IAAAA,IAAI,EAAE,SADP;AAECC,IAAAA,IAAI,EAAE,YAFP;AAGCC,IAAAA,MAAM,EAAE;AAHT,GAhBsC,CAAD,CAAtC;AAuBA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,UAAU,EAAE,GADK;AAEjBC,IAAAA,QAAQ,EAAE,EAFO;AAGjBC,IAAAA,MAAM,EAAEV,YAHS;AAIjBW,IAAAA,KAAK,EAAE,GAJU;AAKjBC,IAAAA,UAAU,EAAE;AALK,GAAnB;;AAQA,WAASC,SAAT,CAAoBC,EAApB,EAAwB;AACvB,QAAIC,KAAK,GAAGb,OAAZ;AACAA,IAAAA,OAAO,CAACc,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5BH,MAAAA,KAAK,CAACG,KAAD,CAAL,CAAaZ,MAAb,GAAsB,KAAtB;AACAS,MAAAA,KAAK,CAACD,EAAD,CAAL,CAAUR,MAAV,GAAmB,IAAnB;AACA,KAHD;AAIAH,IAAAA,UAAU,CAACY,KAAD,CAAV;AACA;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACJ,GAAxB;AAAA,cACIK,OAAO,CAACc,GAAR,CAAY,CAACG,MAAD,EAASD,KAAT,kBACZ,QAAC,OAAD;AAAqB,MAAA,EAAE,EAAEC,MAAM,CAACd,IAAhC;AAAA,6BACC,QAAC,YAAD;AACE,QAAA,OAAO,EAAIV,MAAM,CAACyB,OADpB;AAEE,QAAA,SAAS,EAAIzB,MAAM,CAAC0B,SAFtB;AAGE,QAAA,IAAI,EAAIF,MAAM,CAACf,IAHjB;AAIE,QAAA,MAAM,EAAIG,YAJZ;AAKE,QAAA,MAAM,EAAI,MAAMM,SAAS,CAACK,KAAD,CAL3B;AAME,QAAA,IAAI,EAAIC,MAAM,CAACb,MANjB;AAOE,QAAA,OAAO,EAAI;AAPb;AAAA;AAAA;AAAA;AAAA;AADD,OAAcY,KAAd;AAAA;AAAA;AAAA;AAAA,YADA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5DuBnB,G;UACNH,S;;;KADMG,G","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {NavLink} from 'react-router-dom'\nimport CustomButton from '../../menuItems/CustomButton'\nimport { colors } from '../../../theme/colors'\n\nconst useStyles = makeStyles({\n\tnav: {\n\t\tdisplay: \"flex\",\n\t}\n})\n\nexport default function Nav({headerHeight}) {\n  const classes = useStyles();\n\n  const [buttons, setButtons] = useState([\n\t  {\n\t  \tname: \"Головна\",\n\t  \tlink: \"/\",\n\t  \tactive: true\n\t  },\n\t  {\n\t  \tname: \"Про Нас\",\n\t  \tlink: \"/about\",\n\t  \tactive: false\n\t  },\n\t  {\n\t  \tname: \"Контакти\",\n\t  \tlink: \"/contacts\",\n\t  \tactive: false\n\t  },\n\t  {\n\t  \tname: \"Відгуки\",\n\t  \tlink: \"/feedbacks\",\n\t  \tactive: false\n\t  },\n  ])\n\n  let buttonStyles = {\n    fontWeight: 700,\n    fontSize: 25,\n    height: headerHeight,\n    width: 120,\n    fontFamily: 'Open Sans Condensed',\n  }\n\n  function setActive (id) {\n  \tlet butts = buttons\n  \tbuttons.map((butt, index) => {\n\t  \tbutts[index].active = false\n\t  \tbutts[id].active = true\n  \t})\n  \tsetButtons(butts)\n  }\n\n  return (\n    <nav className={classes.nav}>\n      \t{buttons.map((button, index) => (\n\t      \t<NavLink key={index} to={button.link}>\n\t      \t\t<CustomButton \n\t\t\t        primary = {colors.primary}\n\t\t\t        secondary = {colors.secondary}\n\t\t\t        text = {button.name}\n\t\t\t        styles = {buttonStyles}\n\t\t\t        action = {() => setActive(index)}\n\t\t\t        open = {button.active}\n\t\t\t        enabled = {true}\n\t\t\t      />\n\t\t      </NavLink>\n      \t))}\n    </nav>\n  );\n}"]},"metadata":{},"sourceType":"module"}