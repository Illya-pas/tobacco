{"ast":null,"code":"var _jsxFileName = \"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/itemCards/Carousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { colors } from \"../../theme/colors\";\nimport MainCard from \"./MainCard\";\nimport { useSelector } from \"react-redux\";\nimport rightArrowWhite from \"../../theme/images/right-arrow-white.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardSize = 200;\nconst cardMargin = 50;\nconst arowLength = 120;\nconst cardLength = cardSize + cardMargin;\nconst menuSize = 220;\nconst useStyles = makeStyles(props => ({\n  root: {\n    height: \"fit-content\",\n    alignItems: \"center\",\n    width: props => props.carouselWidth + arowLength,\n    transition: \"width .3s\",\n    position: \"relative\",\n    display: \"flex\"\n  },\n  carousel: {\n    width: props => props.carouselWidth,\n    transition: \"width .3s\",\n    overflow: \"hidden\",\n    height: \"100%\"\n  },\n  carouselInner: {\n    display: \"flex\",\n    width: \"fit-content\",\n    transform: props => `translateX(${props.translateX}px)`,\n    transition: \"transform .3s\"\n  },\n  longArrow: {\n    position: \"absolute\",\n    backgroundColor: colors.secondary,\n    padding: \"13px 20px\",\n    right: 10,\n    borderRadius: \"50%\",\n    cursor: \"pointer\"\n  }\n}));\nexport default function Carousel({\n  escalator\n}) {\n  _s();\n\n  const menuWidth = useSelector(state => state.app.menuWidth);\n  const [translateX, setTranslateX] = useState(0);\n  const [carouselWidth, setCarouselWidth] = useState(0);\n  const [slider, setSlider] = useState({});\n\n  const setWidth = callFromMenu => {\n    // contentWidth - with delay from menuWidth call\n    let menu = 0;\n\n    if (callFromMenu) {\n      menu = !menuWidth ? menuSize : -menuSize;\n    }\n\n    let contentWidth = content.clientWidth - arowLength + menu;\n    let counter = 0;\n\n    while (true) {\n      contentWidth -= cardLength;\n\n      if (contentWidth > 0) {\n        counter++;\n      } else {\n        break;\n      }\n    }\n\n    setCarouselWidth(cardLength * counter);\n  };\n\n  useEffect(() => {\n    let callFromMenu = true;\n    setWidth(callFromMenu);\n  }, [menuWidth]);\n  useEffect(() => {\n    const content = document.querySelector(\"#content\");\n    setSlider(document.querySelector(\"#\" + escalator.id));\n    setWidth();\n  }, []);\n  const classes = useStyles({\n    carouselWidth,\n    translateX\n  });\n  window.addEventListener(\"resize\", () => setWidth());\n\n  const rollCarousel = () => {\n    if (-translateX < slider.clientWidth - carouselWidth) {\n      setTranslateX(translateX - cardLength);\n    } else {\n      setTranslateX(0);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"carousel\",\n      className: classes.carousel,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: escalator.id,\n        className: classes.carouselInner,\n        children: escalator.type.map((tobacco, index) => {\n          return /*#__PURE__*/_jsxDEV(MainCard, {\n            itemCard: tobacco\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 14\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: classes.longArrow,\n      src: rightArrowWhite,\n      alt: \"right-arrow\",\n      onClick: () => rollCarousel()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Carousel, \"YmNpQIehiuDsdaA/El5lAXy+rZ8=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = Carousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/itemCards/Carousel.js"],"names":["React","useState","useEffect","makeStyles","colors","MainCard","useSelector","cardSize","cardMargin","arowLength","cardLength","menuSize","useStyles","props","root","height","alignItems","width","carouselWidth","transition","position","display","carousel","overflow","carouselInner","transform","translateX","longArrow","backgroundColor","secondary","padding","right","borderRadius","cursor","Carousel","escalator","menuWidth","state","app","setTranslateX","setCarouselWidth","slider","setSlider","setWidth","callFromMenu","menu","contentWidth","content","clientWidth","counter","document","querySelector","id","classes","window","addEventListener","rollCarousel","type","map","tobacco","index","rightArrowWhite"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { colors } from \"../../theme/colors\";\nimport MainCard from \"./MainCard\";\nimport { useSelector } from \"react-redux\";\nimport rightArrowWhite from \"../../theme/images/right-arrow-white.svg\";\n\nconst cardSize = 200;\nconst cardMargin = 50;\nconst arowLength = 120;\nconst cardLength = cardSize + cardMargin;\nconst menuSize = 220;\n\nconst useStyles = makeStyles((props) => ({\n\troot: {\n\t\theight: \"fit-content\",\n\t\talignItems: \"center\",\n\t\twidth: (props) => props.carouselWidth + arowLength,\n\t\ttransition: \"width .3s\",\n\t\tposition: \"relative\",\n\t\tdisplay: \"flex\",\n\t},\n\tcarousel: {\n\t\twidth: (props) => props.carouselWidth,\n\t\ttransition: \"width .3s\",\n\t\toverflow: \"hidden\",\n\t\theight: \"100%\",\n\t},\n\tcarouselInner: {\n\t\tdisplay: \"flex\",\n\t\twidth: \"fit-content\",\n\t\ttransform: (props) => `translateX(${props.translateX}px)`,\n\t\ttransition: \"transform .3s\",\n\t},\n\tlongArrow: {\n\t\tposition: \"absolute\",\n\t\tbackgroundColor: colors.secondary,\n\t\tpadding: \"13px 20px\",\n\t\tright: 10,\n\t\tborderRadius: \"50%\",\n\t\tcursor: \"pointer\",\n\t},\n}));\n\nexport default function Carousel({ escalator }) {\n\tconst menuWidth = useSelector((state) => state.app.menuWidth);\n\n\tconst [translateX, setTranslateX] = useState(0);\n\tconst [carouselWidth, setCarouselWidth] = useState(0);\n\tconst [slider, setSlider] = useState({});\n\n\tconst setWidth = (callFromMenu) => {\n\t\t// contentWidth - with delay from menuWidth call\n\t\tlet menu = 0;\n\t\tif (callFromMenu) {\n\t\t\tmenu = !menuWidth ? menuSize : -menuSize;\n\t\t}\n\t\tlet contentWidth = content.clientWidth - arowLength + menu;\n\t\tlet counter = 0;\n\n\t\twhile (true) {\n\t\t\tcontentWidth -= cardLength;\n\t\t\tif (contentWidth > 0) {\n\t\t\t\tcounter++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsetCarouselWidth(cardLength * counter);\n\t};\n\n\tuseEffect(() => {\n\t\tlet callFromMenu = true;\n\t\tsetWidth(callFromMenu);\n\t}, [menuWidth]);\n\n\tuseEffect(() => {\n\t\tconst content = document.querySelector(\"#content\");\n\t\tsetSlider(document.querySelector(\"#\" + escalator.id));\n\t\tsetWidth();\n\t}, []);\n\n\tconst classes = useStyles({ carouselWidth, translateX });\n\n\twindow.addEventListener(\"resize\", () => setWidth());\n\n\tconst rollCarousel = () => {\n\t\tif (-translateX < slider.clientWidth - carouselWidth) {\n\t\t\tsetTranslateX(translateX - cardLength);\n\t\t} else {\n\t\t\tsetTranslateX(0);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div id=\"carousel\" className={classes.carousel}>\n\t\t\t\t<div id={escalator.id} className={classes.carouselInner}>\n\t\t\t\t\t{escalator.type.map((tobacco, index) => {\n\t\t\t\t\t\treturn <MainCard key={index} itemCard={tobacco} />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<img\n\t\t\t\tclassName={classes.longArrow}\n\t\t\t\tsrc={rightArrowWhite}\n\t\t\t\talt=\"right-arrow\"\n\t\t\t\tonClick={() => rollCarousel()}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}