{"ast":null,"code":"var _jsxFileName = \"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/header/components/Nav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport CustomButton from '../../menuItems/CustomButton';\nimport { colors } from '../../../theme/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  nav: {\n    display: \"flex\"\n  }\n});\nexport default function Nav({\n  headerHeight\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [buttons, setButtons] = useState([{\n    name: \"Головна\",\n    link: \"/\"\n  }, {\n    name: \"Про Нас\",\n    link: \"/about\"\n  }, {\n    name: \"Контакти\",\n    link: \"/contacts\"\n  }, {\n    name: \"Відгуки\",\n    link: \"/feedbacks\"\n  }]);\n  let buttonStyles = {\n    fontWeight: 700,\n    fontSize: 25,\n    height: headerHeight,\n    width: 120,\n    fontFamily: 'Open Sans Condensed'\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: classes.nav,\n    children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(NavLink, {\n      to: button.link,\n      children: /*#__PURE__*/_jsxDEV(CustomButton, {\n        primary: colors.primary,\n        secondary: colors.secondary,\n        text: button.name,\n        action: () => setOpen(!open),\n        styles: buttonStyles,\n        open: open,\n        enabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"bu280p/qyfp/5OPrqPFpPBAMbvs=\", false, function () {\n  return [useStyles];\n});\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/header/components/Nav.js"],"names":["React","useState","makeStyles","NavLink","CustomButton","colors","useStyles","nav","display","Nav","headerHeight","classes","buttons","setButtons","name","link","buttonStyles","fontWeight","fontSize","height","width","fontFamily","map","button","index","primary","secondary","setOpen","open"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC5BK,EAAAA,GAAG,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AADuB,CAAD,CAA5B;AAMA,eAAe,SAASC,GAAT,CAAa;AAACC,EAAAA;AAAD,CAAb,EAA6B;AAAA;;AAC1C,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CACtC;AACCa,IAAAA,IAAI,EAAE,SADP;AAECC,IAAAA,IAAI,EAAE;AAFP,GADsC,EAKtC;AACCD,IAAAA,IAAI,EAAE,SADP;AAECC,IAAAA,IAAI,EAAE;AAFP,GALsC,EAStC;AACCD,IAAAA,IAAI,EAAE,UADP;AAECC,IAAAA,IAAI,EAAE;AAFP,GATsC,EAatC;AACCD,IAAAA,IAAI,EAAE,SADP;AAECC,IAAAA,IAAI,EAAE;AAFP,GAbsC,CAAD,CAAtC;AAmBA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,UAAU,EAAE,GADK;AAEjBC,IAAAA,QAAQ,EAAE,EAFO;AAGjBC,IAAAA,MAAM,EAAET,YAHS;AAIjBU,IAAAA,KAAK,EAAE,GAJU;AAKjBC,IAAAA,UAAU,EAAE;AALK,GAAnB;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACJ,GAAxB;AAAA,cACIK,OAAO,CAACU,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACZ,QAAC,OAAD;AAAqB,MAAA,EAAE,EAAED,MAAM,CAACR,IAAhC;AAAA,6BACC,QAAC,YAAD;AACE,QAAA,OAAO,EAAIV,MAAM,CAACoB,OADpB;AAEE,QAAA,SAAS,EAAIpB,MAAM,CAACqB,SAFtB;AAGE,QAAA,IAAI,EAAIH,MAAM,CAACT,IAHjB;AAIE,QAAA,MAAM,EAAI,MAAMa,OAAO,CAAC,CAACC,IAAF,CAJzB;AAKE,QAAA,MAAM,EAAIZ,YALZ;AAME,QAAA,IAAI,EAAIY,IANV;AAOE,QAAA,OAAO,EAAI;AAPb;AAAA;AAAA;AAAA;AAAA;AADD,OAAcJ,KAAd;AAAA;AAAA;AAAA;AAAA,YADA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA/CuBf,G;UACNH,S;;;KADMG,G","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {NavLink} from 'react-router-dom'\nimport CustomButton from '../../menuItems/CustomButton'\nimport { colors } from '../../../theme/colors'\n\nconst useStyles = makeStyles({\n\tnav: {\n\t\tdisplay: \"flex\",\n\t}\n})\n\nexport default function Nav({headerHeight}) {\n  const classes = useStyles();\n\n  const [buttons, setButtons] = useState([\n\t  {\n\t  \tname: \"Головна\",\n\t  \tlink: \"/\"\n\t  },\n\t  {\n\t  \tname: \"Про Нас\",\n\t  \tlink: \"/about\"\n\t  },\n\t  {\n\t  \tname: \"Контакти\",\n\t  \tlink: \"/contacts\"\n\t  },\n\t  {\n\t  \tname: \"Відгуки\",\n\t  \tlink: \"/feedbacks\"\n\t  },\n  ])\n\n  let buttonStyles = {\n    fontWeight: 700,\n    fontSize: 25,\n    height: headerHeight,\n    width: 120,\n    fontFamily: 'Open Sans Condensed',\n  }\n\n  return (\n    <nav className={classes.nav}>\n      \t{buttons.map((button, index) => (\n\t      \t<NavLink key={index} to={button.link}>\n\t      \t\t<CustomButton \n\t\t\t        primary = {colors.primary}\n\t\t\t        secondary = {colors.secondary}\n\t\t\t        text = {button.name}\n\t\t\t        action = {() => setOpen(!open)}\n\t\t\t        styles = {buttonStyles}\n\t\t\t        open = {open}\n\t\t\t        enabled = {true}\n\t\t\t      />\n\t\t      </NavLink>\n      \t))}\n    </nav>\n  );\n}"]},"metadata":{},"sourceType":"module"}