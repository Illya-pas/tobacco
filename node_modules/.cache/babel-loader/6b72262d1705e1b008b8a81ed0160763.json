{"ast":null,"code":"import { post } from \"./apiCalls\";\nimport { MENU_WIDTH, PUSH_ITEM_CART, DEL_ITEM_CART, COUNT_TOTAL, CHANGE_AMOUNT, SET_LOCATION, ADD_FILTER, REMOVE_FILTER, FETCH_PAPER, FETCH_HILZY, FETCH_FILTERS, FETCH_AROMA, FETCH_MASHINE } from \"./types\";\nimport { wholePaper, wholeHilzy, wholeFilters, wholeAroma, wholeMashine } from \"./queryItems\";\nexport const fetchItems = (type, filters) => {\n  return async dispatch => {\n    let result;\n    let beautified;\n\n    switch (type) {\n      case \"paper\":\n        result = await post(wholePaper(filters));\n        beautified = result && result.data.filterPaper ? result.data.filterPaper.paper : [];\n        dispatch({\n          type: FETCH_PAPER,\n          payload: beautified\n        });\n        return;\n\n      case \"hilzy\":\n        result = await post(wholeHilzy(filters));\n        beautified = result && result.data.filterHilzy ? result.data.filterHilzy.hilzy : [];\n        dispatch({\n          type: FETCH_HILZY,\n          payload: beautified\n        });\n        return;\n\n      case \"filter\":\n        result = await post(wholeFilters(filters));\n        beautified = result && result.data.filterFilters ? result.data.filterFilters.filters : [];\n        dispatch({\n          type: FETCH_FILTERS,\n          payload: beautified\n        });\n        return;\n\n      case \"aroma\":\n        result = await post(wholeAroma(filters));\n        beautified = result && result.data.filterAroma ? result.data.filterAroma.aroma : [];\n        dispatch({\n          type: FETCH_AROMA,\n          payload: beautified\n        });\n        return;\n\n      case \"mashine\":\n        result = await post(wholeMashine(filters));\n        beautified = result && result.data.filterMasine ? result.data.filterMasine.mashine : [];\n        dispatch({\n          type: FETCH_MASHINE,\n          payload: beautified\n        });\n        return;\n    }\n  };\n};\nexport const changeWidthMenu = menuWidth => {\n  return dispatch => {\n    dispatch({\n      type: MENU_WIDTH,\n      payload: menuWidth\n    });\n  };\n}; // const countTotal = () => {\n// \t\t\t\t\tsingleCartItem.amount >= 5\n// \t\t\t\t\t? (price = singleCartItem.inBox)\n// \t\t\t\t\t: (price = singleCartItem.inPack);\n// \t\t\t\tconsole.log(price);\n// }\n\nexport const addToCart = (itemCard, cart) => {\n  return async dispatch => {\n    const copyItemCard = { ...itemCard\n    };\n    if (!copyItemCard.available) return;\n\n    if (cart) {\n      let isInCart = false;\n      cart.map((cartItem, index) => {\n        if (cartItem.id === copyItemCard.id) {\n          const newCart = [...cart];\n          copyItemCard.availability && (newCart[index].amount += 1);\n          dispatch({\n            type: CHANGE_AMOUNT,\n            payload: newCart\n          });\n          dispatch({\n            type: COUNT_TOTAL\n          });\n          isInCart = true;\n          return;\n        }\n      });\n\n      if (!isInCart) {\n        copyItemCard.availability && (copyItemCard.amount = 1);\n        dispatch({\n          type: PUSH_ITEM_CART,\n          payload: copyItemCard\n        });\n        dispatch({\n          type: COUNT_TOTAL\n        });\n      }\n    } else {\n      copyItemCard.availability && (copyItemCard.amount = 1);\n      dispatch({\n        type: PUSH_ITEM_CART,\n        payload: copyItemCard\n      });\n      dispatch({\n        type: COUNT_TOTAL\n      });\n    }\n  };\n};\nexport const changeAmount = (inputValue, cart, index) => {\n  return async dispatch => {\n    let counter = 0;\n    const newCart = cart;\n    inputValue === \"\" ? inputValue = 0 : inputValue = +inputValue;\n    newCart[index].amount = inputValue;\n    dispatch({\n      type: CHANGE_AMOUNT,\n      payload: newCart\n    });\n    dispatch({\n      type: COUNT_TOTAL\n    });\n  };\n};\nexport const delFromCart = (cart, index) => {\n  return async dispatch => {\n    let counter = 0;\n    dispatch({\n      type: DEL_ITEM_CART,\n      payload: index\n    });\n    dispatch({\n      type: COUNT_TOTAL\n    });\n  };\n};\nexport const changeLocation = location => {\n  return async dispatch => {\n    dispatch({\n      type: SET_LOCATION,\n      payload: location\n    });\n  };\n};\nexport const addFilter = filter => {\n  return dispatch => {\n    dispatch({\n      type: ADD_FILTER,\n      payload: filter\n    });\n  };\n};\nexport const removeFilter = filter => {\n  return dispatch => {\n    dispatch({\n      type: REMOVE_FILTER,\n      payload: filter\n    });\n  };\n};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/redux/actions.js"],"names":["post","MENU_WIDTH","PUSH_ITEM_CART","DEL_ITEM_CART","COUNT_TOTAL","CHANGE_AMOUNT","SET_LOCATION","ADD_FILTER","REMOVE_FILTER","FETCH_PAPER","FETCH_HILZY","FETCH_FILTERS","FETCH_AROMA","FETCH_MASHINE","wholePaper","wholeHilzy","wholeFilters","wholeAroma","wholeMashine","fetchItems","type","filters","dispatch","result","beautified","data","filterPaper","paper","payload","filterHilzy","hilzy","filterFilters","filterAroma","aroma","filterMasine","mashine","changeWidthMenu","menuWidth","addToCart","itemCard","cart","copyItemCard","available","isInCart","map","cartItem","index","id","newCart","availability","amount","changeAmount","inputValue","counter","delFromCart","changeLocation","location","addFilter","filter","removeFilter"],"mappings":"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","sourcesContent":["import { post } from \"./apiCalls\";\nimport {\n\tMENU_WIDTH,\n\tPUSH_ITEM_CART,\n\tDEL_ITEM_CART,\n\tCOUNT_TOTAL,\n\tCHANGE_AMOUNT,\n\tSET_LOCATION,\n\tADD_FILTER,\n\tREMOVE_FILTER,\n\tFETCH_PAPER,\n\tFETCH_HILZY,\n\tFETCH_FILTERS,\n\tFETCH_AROMA,\n\tFETCH_MASHINE,\n} from \"./types\";\n\nimport {\n\twholePaper,\n\twholeHilzy,\n\twholeFilters,\n\twholeAroma,\n\twholeMashine,\n} from \"./queryItems\";\n\nexport const fetchItems = (type, filters) => {\n\treturn async (dispatch) => {\n\t\tlet result;\n\t\tlet beautified;\n\n\t\tswitch (type) {\n\t\t\tcase \"paper\":\n\t\t\t\tresult = await post(wholePaper(filters));\n\t\t\t\tbeautified =\n\t\t\t\t\tresult && result.data.filterPaper\n\t\t\t\t\t\t? result.data.filterPaper.paper\n\t\t\t\t\t\t: [];\n\t\t\t\tdispatch({ type: FETCH_PAPER, payload: beautified });\n\t\t\t\treturn;\n\n\t\t\tcase \"hilzy\":\n\t\t\t\tresult = await post(wholeHilzy(filters));\n\t\t\t\tbeautified =\n\t\t\t\t\tresult && result.data.filterHilzy\n\t\t\t\t\t\t? result.data.filterHilzy.hilzy\n\t\t\t\t\t\t: [];\n\t\t\t\tdispatch({ type: FETCH_HILZY, payload: beautified });\n\t\t\t\treturn;\n\n\t\t\tcase \"filter\":\n\t\t\t\tresult = await post(wholeFilters(filters));\n\t\t\t\tbeautified =\n\t\t\t\t\tresult && result.data.filterFilters\n\t\t\t\t\t\t? result.data.filterFilters.filters\n\t\t\t\t\t\t: [];\n\t\t\t\tdispatch({ type: FETCH_FILTERS, payload: beautified });\n\t\t\t\treturn;\n\n\t\t\tcase \"aroma\":\n\t\t\t\tresult = await post(wholeAroma(filters));\n\t\t\t\tbeautified =\n\t\t\t\t\tresult && result.data.filterAroma\n\t\t\t\t\t\t? result.data.filterAroma.aroma\n\t\t\t\t\t\t: [];\n\t\t\t\tdispatch({ type: FETCH_AROMA, payload: beautified });\n\t\t\t\treturn;\n\n\t\t\tcase \"mashine\":\n\t\t\t\tresult = await post(wholeMashine(filters));\n\t\t\t\tbeautified =\n\t\t\t\t\tresult && result.data.filterMasine\n\t\t\t\t\t\t? result.data.filterMasine.mashine\n\t\t\t\t\t\t: [];\n\t\t\t\tdispatch({ type: FETCH_MASHINE, payload: beautified });\n\t\t\t\treturn;\n\t\t}\n\t};\n};\n\nexport const changeWidthMenu = (menuWidth) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: MENU_WIDTH, payload: menuWidth });\n\t};\n};\n\n// const countTotal = () => {\n// \t\t\t\t\tsingleCartItem.amount >= 5\n// \t\t\t\t\t? (price = singleCartItem.inBox)\n// \t\t\t\t\t: (price = singleCartItem.inPack);\n// \t\t\t\tconsole.log(price);\n// }\n\nexport const addToCart = (itemCard, cart) => {\n\treturn async (dispatch) => {\n\t\tconst copyItemCard = { ...itemCard };\n\t\tif (!copyItemCard.available) return;\n\t\tif (cart) {\n\t\t\tlet isInCart = false;\n\t\t\tcart.map((cartItem, index) => {\n\t\t\t\tif (cartItem.id === copyItemCard.id) {\n\t\t\t\t\tconst newCart = [...cart];\n\t\t\t\t\tcopyItemCard.availability && (newCart[index].amount += 1);\n\t\t\t\t\tdispatch({ type: CHANGE_AMOUNT, payload: newCart });\n\t\t\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t\t\t\tisInCart = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!isInCart) {\n\t\t\t\tcopyItemCard.availability && (copyItemCard.amount = 1);\n\t\t\t\tdispatch({ type: PUSH_ITEM_CART, payload: copyItemCard });\n\t\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t\t}\n\t\t} else {\n\t\t\tcopyItemCard.availability && (copyItemCard.amount = 1);\n\t\t\tdispatch({ type: PUSH_ITEM_CART, payload: copyItemCard });\n\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t}\n\t};\n};\n\nexport const changeAmount = (inputValue, cart, index) => {\n\treturn async (dispatch) => {\n\t\tlet counter = 0;\n\t\tconst newCart = cart;\n\t\tinputValue === \"\" ? (inputValue = 0) : (inputValue = +inputValue);\n\t\tnewCart[index].amount = inputValue;\n\t\tdispatch({ type: CHANGE_AMOUNT, payload: newCart });\n\t\tdispatch({ type: COUNT_TOTAL });\n\t};\n};\n\nexport const delFromCart = (cart, index) => {\n\treturn async (dispatch) => {\n\t\tlet counter = 0;\n\t\tdispatch({ type: DEL_ITEM_CART, payload: index });\n\t\tdispatch({ type: COUNT_TOTAL });\n\t};\n};\n\nexport const changeLocation = (location) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: SET_LOCATION, payload: location });\n\t};\n};\n\nexport const addFilter = (filter) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: ADD_FILTER, payload: filter });\n\t};\n};\n\nexport const removeFilter = (filter) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: REMOVE_FILTER, payload: filter });\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}