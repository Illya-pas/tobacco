{"ast":null,"code":"var _jsxFileName = \"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/menu/catalog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { colors } from '../../theme/colors';\nimport CustomButton from '../menuItems/CustomButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 220;\nconst headerHeight = 60;\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    borderRight: `1px solid ${colors.secondary}`,\n    height: \"calc(100% - 90px)\",\n    position: \"absolute\",\n    marginTop: 34 + headerHeight\n  }\n});\nexport default function Catalog() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleDrawer = () => {\n    setOpen(!open);\n  };\n\n  let buttonStyles = {\n    fontWeight: 700,\n    fontSize: 25,\n    width: drawerWidth,\n    height: headerHeight,\n    fontFamily: 'Open Sans Condensed'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n      primary: colors.primary,\n      secondary: colors.secondary,\n      text: \"\\u041A\\u0430\\u0442\\u0430\\u043B\\u043E\\u0433\",\n      action: handleDrawer,\n      styles: buttonStyles,\n      open: open,\n      enabled: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Catalog, \"ZbauVcu/I6GQoZvFWe0/Vd1mXmg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/menu/catalog.js"],"names":["React","useState","makeStyles","Drawer","List","ListItem","ListItemText","colors","CustomButton","drawerWidth","headerHeight","useStyles","root","display","flexDirection","hide","drawer","width","drawerPaper","borderRight","secondary","height","position","marginTop","Catalog","classes","open","setOpen","handleDrawer","buttonStyles","fontWeight","fontSize","fontFamily","primary","paper","map","text","index"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { colors } from '../../theme/colors'\nimport CustomButton from '../menuItems/CustomButton'\n\nconst drawerWidth = 220;\nconst headerHeight = 60;\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    \n  },\n  drawerPaper: {\n    width: drawerWidth,\n    borderRight: `1px solid ${colors.secondary}`,\n    height: \"calc(100% - 90px)\",\n    position: \"absolute\",\n    marginTop: 34 + headerHeight\n  },\n});\n\nexport default function Catalog() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleDrawer = () => {\n    setOpen(!open);\n  };\n\n  let buttonStyles = {\n    fontWeight: 700,\n    fontSize: 25,\n    width: drawerWidth,\n    height: headerHeight,\n    fontFamily: 'Open Sans Condensed',\n  }\n\n  return (\n    <div className={classes.root}>\n      <CustomButton \n        primary = {colors.primary}\n        secondary = {colors.secondary}\n        text = \"Каталог\"\n        action = {handleDrawer}\n        styles = {buttonStyles}\n        open = {open}\n        enabled = {false}\n      />\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}