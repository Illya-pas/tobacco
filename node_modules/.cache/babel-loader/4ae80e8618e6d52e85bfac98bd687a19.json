{"ast":null,"code":"import { FETCH_CARDS, MENU_WIDTH, PUSH_ITEM_CART, DEL_ITEM_CART, COUNT_TOTAL, CHANGE_AMOUNT } from \"./types\"; // export const fetchItems = (itemsType) => {\n// \treturn async (dispatch) => {\n// \t\tdispatch({ type: FETCH_CARDS, payload: {} });\n// \t};\n// };\n\nexport const changeWidthMenu = menuWidth => {\n  return dispatch => {\n    dispatch({\n      type: MENU_WIDTH,\n      payload: menuWidth\n    });\n  };\n};\nexport const addToCart = (itemCard, cart) => {\n  return async dispatch => {\n    let counter = 0;\n\n    if (cart) {\n      let isInCart = false;\n      cart.map((cartItem, index) => {\n        if (cartItem.id === itemCard.id) {\n          const newCart = cart;\n          newCart[index].amount += 1;\n          dispatch({\n            type: CHANGE_AMOUNT,\n            payload: newCart\n          });\n          dispatch({\n            type: COUNT_TOTAL\n          });\n          isInCart = true;\n          return;\n        }\n      });\n\n      if (!isInCart) {\n        itemCard.amount += 1;\n        dispatch({\n          type: PUSH_ITEM_CART,\n          payload: itemCard\n        });\n        dispatch({\n          type: COUNT_TOTAL,\n          payload: counter\n        });\n      }\n    } else {\n      itemCard.amount += 1;\n      dispatch({\n        type: PUSH_ITEM_CART,\n        payload: itemCard\n      });\n      dispatch({\n        type: COUNT_TOTAL\n      });\n    }\n  };\n};\nexport const changeAmount = (inputValue, cart, index) => {\n  return async dispatch => {\n    let counter = 0;\n    const newCart = cart;\n    inputValue === \"\" ? inputValue = 0 : null;\n    newCart[index].amount = inputValue;\n    dispatch({\n      type: CHANGE_AMOUNT,\n      payload: newCart\n    });\n    dispatch({\n      type: COUNT_TOTAL\n    });\n  };\n};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/redux/actions.js"],"names":["FETCH_CARDS","MENU_WIDTH","PUSH_ITEM_CART","DEL_ITEM_CART","COUNT_TOTAL","CHANGE_AMOUNT","changeWidthMenu","menuWidth","dispatch","type","payload","addToCart","itemCard","cart","counter","isInCart","map","cartItem","index","id","newCart","amount","changeAmount","inputValue"],"mappings":"AAAA,SACCA,WADD,EAECC,UAFD,EAGCC,cAHD,EAICC,aAJD,EAKCC,WALD,EAMCC,aAND,QAOO,SAPP,C,CASA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAIC,SAAD,IAAe;AAC7C,SAAQC,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,UAAR;AAAoBS,MAAAA,OAAO,EAAEH;AAA7B,KAAD,CAAR;AACA,GAFD;AAGA,CAJM;AAMP,OAAO,MAAMI,SAAS,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC5C,SAAO,MAAOL,QAAP,IAAoB;AAC1B,QAAIM,OAAO,GAAG,CAAd;;AACA,QAAID,IAAJ,EAAU;AACT,UAAIE,QAAQ,GAAG,KAAf;AACAF,MAAAA,IAAI,CAACG,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7B,YAAID,QAAQ,CAACE,EAAT,KAAgBP,QAAQ,CAACO,EAA7B,EAAiC;AAChC,gBAAMC,OAAO,GAAGP,IAAhB;AACAO,UAAAA,OAAO,CAACF,KAAD,CAAP,CAAeG,MAAf,IAAyB,CAAzB;AACAb,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAEJ,aAAR;AAAuBK,YAAAA,OAAO,EAAEU;AAAhC,WAAD,CAAR;AACAZ,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAEL;AAAR,WAAD,CAAR;AACAW,UAAAA,QAAQ,GAAG,IAAX;AACA;AACA;AACD,OATD;;AAUA,UAAI,CAACA,QAAL,EAAe;AACdH,QAAAA,QAAQ,CAACS,MAAT,IAAmB,CAAnB;AACAb,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEP,cAAR;AAAwBQ,UAAAA,OAAO,EAAEE;AAAjC,SAAD,CAAR;AACAJ,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEL,WAAR;AAAqBM,UAAAA,OAAO,EAAEI;AAA9B,SAAD,CAAR;AACA;AACD,KAjBD,MAiBO;AACNF,MAAAA,QAAQ,CAACS,MAAT,IAAmB,CAAnB;AACAb,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP,cAAR;AAAwBQ,QAAAA,OAAO,EAAEE;AAAjC,OAAD,CAAR;AACAJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL;AAAR,OAAD,CAAR;AACA;AACD,GAxBD;AAyBA,CA1BM;AA4BP,OAAO,MAAMkB,YAAY,GAAG,CAACC,UAAD,EAAaV,IAAb,EAAmBK,KAAnB,KAA6B;AACxD,SAAO,MAAOV,QAAP,IAAoB;AAC1B,QAAIM,OAAO,GAAG,CAAd;AACA,UAAMM,OAAO,GAAGP,IAAhB;AACAU,IAAAA,UAAU,KAAK,EAAf,GAAqBA,UAAU,GAAG,CAAlC,GAAuC,IAAvC;AACAH,IAAAA,OAAO,CAACF,KAAD,CAAP,CAAeG,MAAf,GAAwBE,UAAxB;AACAf,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,aAAR;AAAuBK,MAAAA,OAAO,EAAEU;AAAhC,KAAD,CAAR;AACAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,GAPD;AAQA,CATM","sourcesContent":["import {\n\tFETCH_CARDS,\n\tMENU_WIDTH,\n\tPUSH_ITEM_CART,\n\tDEL_ITEM_CART,\n\tCOUNT_TOTAL,\n\tCHANGE_AMOUNT,\n} from \"./types\";\n\n// export const fetchItems = (itemsType) => {\n// \treturn async (dispatch) => {\n// \t\tdispatch({ type: FETCH_CARDS, payload: {} });\n// \t};\n// };\n\nexport const changeWidthMenu = (menuWidth) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: MENU_WIDTH, payload: menuWidth });\n\t};\n};\n\nexport const addToCart = (itemCard, cart) => {\n\treturn async (dispatch) => {\n\t\tlet counter = 0;\n\t\tif (cart) {\n\t\t\tlet isInCart = false;\n\t\t\tcart.map((cartItem, index) => {\n\t\t\t\tif (cartItem.id === itemCard.id) {\n\t\t\t\t\tconst newCart = cart;\n\t\t\t\t\tnewCart[index].amount += 1;\n\t\t\t\t\tdispatch({ type: CHANGE_AMOUNT, payload: newCart });\n\t\t\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t\t\t\tisInCart = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!isInCart) {\n\t\t\t\titemCard.amount += 1;\n\t\t\t\tdispatch({ type: PUSH_ITEM_CART, payload: itemCard });\n\t\t\t\tdispatch({ type: COUNT_TOTAL, payload: counter });\n\t\t\t}\n\t\t} else {\n\t\t\titemCard.amount += 1;\n\t\t\tdispatch({ type: PUSH_ITEM_CART, payload: itemCard });\n\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t}\n\t};\n};\n\nexport const changeAmount = (inputValue, cart, index) => {\n\treturn async (dispatch) => {\n\t\tlet counter = 0;\n\t\tconst newCart = cart;\n\t\tinputValue === \"\" ? (inputValue = 0) : null;\n\t\tnewCart[index].amount = inputValue;\n\t\tdispatch({ type: CHANGE_AMOUNT, payload: newCart });\n\t\tdispatch({ type: COUNT_TOTAL });\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}