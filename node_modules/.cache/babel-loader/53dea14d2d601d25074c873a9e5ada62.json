{"ast":null,"code":"import { ADD_FILTER, REMOVE_FILTER, FETCH_PAPER, FETCH_HILZY, FETCH_FILTERS, FETCH_AROMA, FETCH_MASHINE, FETCH_SEARCH } from \"../types\";\nconst initialState = {\n  search: [],\n  paper: [],\n  hilzy: [],\n  filter: [],\n  aroma: [],\n  mashine: [],\n  total: 0,\n  filters: [{\n    name: \"paper\",\n    filters: []\n  }, {\n    name: \"hilzy\",\n    filters: []\n  }, {\n    name: \"filter\",\n    filters: []\n  }, {\n    name: \"aroma\",\n    filters: []\n  }, {\n    name: \"mashine\",\n    filters: []\n  }]\n};\nexport const cardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SEARCH:\n      let copySearch = [...state.search];\n      copySearch.map(searchItem => {\n        let itemID = action.payload[0] && action.payload[0].id;\n\n        if (searchItem.id === itemID) {\n          return;\n        } else {\n          copySearch.concat(action.payload);\n        }\n      }); // console.log(action.payload[0] && action.payload[0].id);\n\n      return { ...state,\n        search: copySearch\n      };\n\n    case FETCH_PAPER:\n      return { ...state,\n        paper: action.payload\n      };\n\n    case FETCH_HILZY:\n      return { ...state,\n        hilzy: action.payload\n      };\n\n    case FETCH_FILTERS:\n      return { ...state,\n        filter: action.payload\n      };\n\n    case FETCH_AROMA:\n      return { ...state,\n        aroma: action.payload\n      };\n\n    case FETCH_MASHINE:\n      return { ...state,\n        mashine: action.payload\n      };\n\n    case ADD_FILTER:\n      let copiedFilters = [...state.filters];\n      copiedFilters.map((fil, index) => {\n        if (fil.name === action.payload.type) {\n          fil.filters.push(action.payload.name);\n          copiedFilters.splice(index, 1, fil);\n        }\n      });\n      return { ...state,\n        filters: copiedFilters\n      };\n\n    case REMOVE_FILTER:\n      let copyFilters = [...state.filters];\n      copyFilters.map((fil, index) => {\n        if (fil.name === action.payload.type) {\n          fil.filters.map((lftr, index) => {\n            if (lftr === action.payload.name) {\n              fil.filters.splice(index, 1);\n            }\n          });\n          copyFilters.splice(index, 1, fil);\n        }\n      });\n      return { ...state,\n        filters: copyFilters\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/redux/reducers/cardReducer.js"],"names":["ADD_FILTER","REMOVE_FILTER","FETCH_PAPER","FETCH_HILZY","FETCH_FILTERS","FETCH_AROMA","FETCH_MASHINE","FETCH_SEARCH","initialState","search","paper","hilzy","filter","aroma","mashine","total","filters","name","cardReducer","state","action","type","copySearch","map","searchItem","itemID","payload","id","concat","copiedFilters","fil","index","push","splice","copyFilters","lftr"],"mappings":"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","sourcesContent":["import {\n\tADD_FILTER,\n\tREMOVE_FILTER,\n\tFETCH_PAPER,\n\tFETCH_HILZY,\n\tFETCH_FILTERS,\n\tFETCH_AROMA,\n\tFETCH_MASHINE,\n\tFETCH_SEARCH,\n} from \"../types\";\n\nconst initialState = {\n\tsearch: [],\n\tpaper: [],\n\thilzy: [],\n\tfilter: [],\n\taroma: [],\n\tmashine: [],\n\ttotal: 0,\n\tfilters: [\n\t\t{\n\t\t\tname: \"paper\",\n\t\t\tfilters: [],\n\t\t},\n\t\t{\n\t\t\tname: \"hilzy\",\n\t\t\tfilters: [],\n\t\t},\n\t\t{\n\t\t\tname: \"filter\",\n\t\t\tfilters: [],\n\t\t},\n\t\t{\n\t\t\tname: \"aroma\",\n\t\t\tfilters: [],\n\t\t},\n\t\t{\n\t\t\tname: \"mashine\",\n\t\t\tfilters: [],\n\t\t},\n\t],\n};\n\nexport const cardReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_SEARCH:\n\t\t\tlet copySearch = [...state.search];\n\n\t\t\tcopySearch.map((searchItem) => {\n\t\t\t\tlet itemID = action.payload[0] && action.payload[0].id;\n\t\t\t\tif (searchItem.id === itemID) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tcopySearch.concat(action.payload);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// console.log(action.payload[0] && action.payload[0].id);\n\t\t\treturn { ...state, search: copySearch };\n\n\t\tcase FETCH_PAPER:\n\t\t\treturn { ...state, paper: action.payload };\n\n\t\tcase FETCH_HILZY:\n\t\t\treturn { ...state, hilzy: action.payload };\n\n\t\tcase FETCH_FILTERS:\n\t\t\treturn { ...state, filter: action.payload };\n\n\t\tcase FETCH_AROMA:\n\t\t\treturn { ...state, aroma: action.payload };\n\n\t\tcase FETCH_MASHINE:\n\t\t\treturn { ...state, mashine: action.payload };\n\n\t\tcase ADD_FILTER:\n\t\t\tlet copiedFilters = [...state.filters];\n\t\t\tcopiedFilters.map((fil, index) => {\n\t\t\t\tif (fil.name === action.payload.type) {\n\t\t\t\t\tfil.filters.push(action.payload.name);\n\t\t\t\t\tcopiedFilters.splice(index, 1, fil);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn { ...state, filters: copiedFilters };\n\n\t\tcase REMOVE_FILTER:\n\t\t\tlet copyFilters = [...state.filters];\n\t\t\tcopyFilters.map((fil, index) => {\n\t\t\t\tif (fil.name === action.payload.type) {\n\t\t\t\t\tfil.filters.map((lftr, index) => {\n\t\t\t\t\t\tif (lftr === action.payload.name) {\n\t\t\t\t\t\t\tfil.filters.splice(index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tcopyFilters.splice(index, 1, fil);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn { ...state, filters: copyFilters };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}