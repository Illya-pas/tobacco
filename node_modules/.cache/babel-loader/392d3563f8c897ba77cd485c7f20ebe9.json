{"ast":null,"code":"const URL = \"http://api.imperiaua.com.ua/graphql/\";\nconst myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\nexport const post = async query => {\n  console.log(query);\n  let graphql = JSON.stringify({\n    query: query,\n    variables: {}\n  });\n  let requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: graphql,\n    redirect: \"follow\"\n  };\n\n  try {\n    const response = await fetch(URL, requestOptions);\n    const text = await response.text();\n    console.log(text);\n  } catch (e) {\n    console.log(\"error\", e);\n  }\n};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/redux/apiCalls.js"],"names":["URL","myHeaders","Headers","append","post","query","console","log","graphql","JSON","stringify","variables","requestOptions","method","headers","body","redirect","response","fetch","text","e"],"mappings":"AAAA,MAAMA,GAAG,GAAG,sCAAZ;AAEA,MAAMC,SAAS,GAAG,IAAIC,OAAJ,EAAlB;AACAD,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAOC,KAAP,IAAiB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC5BL,IAAAA,KAAK,EAAEA,KADqB;AAE5BM,IAAAA,SAAS,EAAE;AAFiB,GAAf,CAAd;AAIA,MAAIC,cAAc,GAAG;AACpBC,IAAAA,MAAM,EAAE,MADY;AAEpBC,IAAAA,OAAO,EAAEb,SAFW;AAGpBc,IAAAA,IAAI,EAAEP,OAHc;AAIpBQ,IAAAA,QAAQ,EAAE;AAJU,GAArB;;AAOA,MAAI;AACH,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAClB,GAAD,EAAMY,cAAN,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACA,GAJD,CAIE,OAAOC,CAAP,EAAU;AACXd,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBa,CAArB;AACA;AACD,CApBM","sourcesContent":["const URL = \"http://api.imperiaua.com.ua/graphql/\";\n\nconst myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nexport const post = async (query) => {\n\tconsole.log(query);\n\tlet graphql = JSON.stringify({\n\t\tquery: query,\n\t\tvariables: {},\n\t});\n\tlet requestOptions = {\n\t\tmethod: \"POST\",\n\t\theaders: myHeaders,\n\t\tbody: graphql,\n\t\tredirect: \"follow\",\n\t};\n\n\ttry {\n\t\tconst response = await fetch(URL, requestOptions);\n\t\tconst text = await response.text();\n\t\tconsole.log(text);\n\t} catch (e) {\n\t\tconsole.log(\"error\", e);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}