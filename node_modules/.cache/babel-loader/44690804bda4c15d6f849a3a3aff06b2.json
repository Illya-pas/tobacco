{"ast":null,"code":"export const sorting = (items, filters) => {\n  let sorted = [...items]; //////////////////////////////////\n\n  let filterList;\n  let newList = [];\n  let sortedList = filters[0].filters.map(filtr => {\n    switch (filtr) {\n      case \"Бренд\":\n        filterList = items.map(item => {\n          return item.name;\n        });\n        filterList.sort();\n        sorted.map((sortedItem, index) => {\n          let oldIndex = index;\n          filterList.map((filteredItem, index) => {\n            if (sortedItem.name === filteredItem) {\n              newList[index] = sorted[oldIndex];\n            }\n          });\n        });\n    }\n\n    console.log(sorted);\n    console.log(newList);\n    return newList;\n  });\n  console.log(sortedList); //////////////////////////////////\n  // sorted.sort((a, b) => b.name - a.name);\n  // console.log([\"You\", \"Me\"].sort());\n  // console.log(sorted);\n\n  return sorted;\n};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/menu/components/Sorting.js"],"names":["sorting","items","filters","sorted","filterList","newList","sortedList","map","filtr","item","name","sort","sortedItem","index","oldIndex","filteredItem","console","log"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC1C,MAAIC,MAAM,GAAG,CAAC,GAAGF,KAAJ,CAAb,CAD0C,CAG1C;;AAEA,MAAIG,UAAJ;AACA,MAAIC,OAAO,GAAG,EAAd;AAEA,MAAIC,UAAU,GAAGJ,OAAO,CAAC,CAAD,CAAP,CAAWA,OAAX,CAAmBK,GAAnB,CAAwBC,KAAD,IAAW;AAClD,YAAQA,KAAR;AACC,WAAK,OAAL;AACCJ,QAAAA,UAAU,GAAGH,KAAK,CAACM,GAAN,CAAWE,IAAD,IAAU;AAChC,iBAAOA,IAAI,CAACC,IAAZ;AACA,SAFY,CAAb;AAGAN,QAAAA,UAAU,CAACO,IAAX;AACAR,QAAAA,MAAM,CAACI,GAAP,CAAW,CAACK,UAAD,EAAaC,KAAb,KAAuB;AACjC,cAAIC,QAAQ,GAAGD,KAAf;AACAT,UAAAA,UAAU,CAACG,GAAX,CAAe,CAACQ,YAAD,EAAeF,KAAf,KAAyB;AACvC,gBAAID,UAAU,CAACF,IAAX,KAAoBK,YAAxB,EAAsC;AACrCV,cAAAA,OAAO,CAACQ,KAAD,CAAP,GAAiBV,MAAM,CAACW,QAAD,CAAvB;AACA;AACD,WAJD;AAKA,SAPD;AANF;;AAeAE,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,WAAOA,OAAP;AACA,GAnBgB,CAAjB;AAqBAW,EAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ,EA7B0C,CA+B1C;AAEA;AAEA;AACA;;AACA,SAAOH,MAAP;AACA,CAtCM","sourcesContent":["export const sorting = (items, filters) => {\n\tlet sorted = [...items];\n\n\t//////////////////////////////////\n\n\tlet filterList;\n\tlet newList = [];\n\n\tlet sortedList = filters[0].filters.map((filtr) => {\n\t\tswitch (filtr) {\n\t\t\tcase \"Бренд\":\n\t\t\t\tfilterList = items.map((item) => {\n\t\t\t\t\treturn item.name;\n\t\t\t\t});\n\t\t\t\tfilterList.sort();\n\t\t\t\tsorted.map((sortedItem, index) => {\n\t\t\t\t\tlet oldIndex = index;\n\t\t\t\t\tfilterList.map((filteredItem, index) => {\n\t\t\t\t\t\tif (sortedItem.name === filteredItem) {\n\t\t\t\t\t\t\tnewList[index] = sorted[oldIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\tconsole.log(sorted);\n\t\tconsole.log(newList);\n\t\treturn newList;\n\t});\n\n\tconsole.log(sortedList);\n\n\t//////////////////////////////////\n\n\t// sorted.sort((a, b) => b.name - a.name);\n\n\t// console.log([\"You\", \"Me\"].sort());\n\t// console.log(sorted);\n\treturn sorted;\n};\n"]},"metadata":{},"sourceType":"module"}