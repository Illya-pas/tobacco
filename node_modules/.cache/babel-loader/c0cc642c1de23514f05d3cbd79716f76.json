{"ast":null,"code":"import { post } from \"./apiCalls\";\nimport { FETCH_CARDS, MENU_WIDTH, PUSH_ITEM_CART, DEL_ITEM_CART, COUNT_TOTAL, CHANGE_AMOUNT, SET_LOCATION, ADD_FILTER, REMOVE_FILTER } from \"./types\";\nimport { wholePaper, wholeHilzy, wholeFilters, wholeAroma, wholeMashine } from \"./queryItems\"; // itemsType\n\nexport const fetchItems = type => {\n  return async dispatch => {\n    let result;\n\n    switch (type) {\n      case \"paper\":\n        result = await post(wholePaper); // dispatch({ type: FETCH_CARDS, payload: {} });\n\n        console.log(result);\n        return;\n\n      case \"hilzy\":\n        post(wholeHilzy);\n        return;\n\n      case \"filters\":\n        post(wholeFilters);\n        return;\n\n      case \"aroma\":\n        post(wholeAroma);\n        return;\n\n      case \"mashine\":\n        post(wholeMashine);\n        return;\n\n      default:\n        post(wholePaper);\n        post(wholeHilzy);\n        post(wholeFilters);\n        post(wholeAroma);\n        post(wholeMashine);\n        return;\n    } // dispatch({ type: FETCH_CARDS, payload: {} });\n    // post(query);\n\n  };\n};\nexport const changeWidthMenu = menuWidth => {\n  return dispatch => {\n    dispatch({\n      type: MENU_WIDTH,\n      payload: menuWidth\n    });\n  };\n};\nexport const addToCart = (itemCard, cart) => {\n  return async dispatch => {\n    const copyItemCard = { ...itemCard\n    }; // if (!copyItemCard.available) return;\n\n    if (cart) {\n      let isInCart = false;\n      cart.map((cartItem, index) => {\n        if (cartItem.id === copyItemCard.id) {\n          const newCart = [...cart];\n          copyItemCard.available && (newCart[index].amount += 1);\n          dispatch({\n            type: CHANGE_AMOUNT,\n            payload: newCart\n          });\n          dispatch({\n            type: COUNT_TOTAL\n          });\n          isInCart = true;\n          return;\n        }\n      });\n\n      if (!isInCart) {\n        copyItemCard.available && (copyItemCard.amount += 1);\n        dispatch({\n          type: PUSH_ITEM_CART,\n          payload: copyItemCard\n        });\n        dispatch({\n          type: COUNT_TOTAL\n        });\n      }\n    } else {\n      copyItemCard.available && (copyItemCard.amount += 1);\n      dispatch({\n        type: PUSH_ITEM_CART,\n        payload: copyItemCard\n      });\n      dispatch({\n        type: COUNT_TOTAL\n      });\n    }\n  };\n};\nexport const changeAmount = (inputValue, cart, index) => {\n  return async dispatch => {\n    let counter = 0;\n    const newCart = cart;\n    inputValue === \"\" ? inputValue = 0 : inputValue = +inputValue;\n    newCart[index].amount = inputValue;\n    dispatch({\n      type: CHANGE_AMOUNT,\n      payload: newCart\n    });\n    dispatch({\n      type: COUNT_TOTAL\n    });\n  };\n};\nexport const delFromCart = (cart, index) => {\n  return async dispatch => {\n    let counter = 0;\n    dispatch({\n      type: DEL_ITEM_CART,\n      payload: index\n    });\n    dispatch({\n      type: COUNT_TOTAL\n    });\n  };\n};\nexport const changeLocation = location => {\n  return async dispatch => {\n    dispatch({\n      type: SET_LOCATION,\n      payload: location\n    });\n  };\n};\nexport const addFilter = filterName => {\n  return dispatch => {\n    dispatch({\n      type: ADD_FILTER,\n      payload: filterName\n    });\n  };\n};\nexport const removeFilter = filterIndex => {\n  return dispatch => {\n    dispatch({\n      type: REMOVE_FILTER,\n      payload: filterIndex\n    });\n  };\n};","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/redux/actions.js"],"names":["post","FETCH_CARDS","MENU_WIDTH","PUSH_ITEM_CART","DEL_ITEM_CART","COUNT_TOTAL","CHANGE_AMOUNT","SET_LOCATION","ADD_FILTER","REMOVE_FILTER","wholePaper","wholeHilzy","wholeFilters","wholeAroma","wholeMashine","fetchItems","type","dispatch","result","console","log","changeWidthMenu","menuWidth","payload","addToCart","itemCard","cart","copyItemCard","isInCart","map","cartItem","index","id","newCart","available","amount","changeAmount","inputValue","counter","delFromCart","changeLocation","location","addFilter","filterName","removeFilter","filterIndex"],"mappings":"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","sourcesContent":["import { post } from \"./apiCalls\";\nimport {\n\tFETCH_CARDS,\n\tMENU_WIDTH,\n\tPUSH_ITEM_CART,\n\tDEL_ITEM_CART,\n\tCOUNT_TOTAL,\n\tCHANGE_AMOUNT,\n\tSET_LOCATION,\n\tADD_FILTER,\n\tREMOVE_FILTER,\n} from \"./types\";\n\nimport {\n\twholePaper,\n\twholeHilzy,\n\twholeFilters,\n\twholeAroma,\n\twholeMashine,\n} from \"./queryItems\";\n\n// itemsType\nexport const fetchItems = (type) => {\n\treturn async (dispatch) => {\n\t\tlet result;\n\n\t\tswitch (type) {\n\t\t\tcase \"paper\":\n\t\t\t\tresult = await post(wholePaper);\n\t\t\t\t// dispatch({ type: FETCH_CARDS, payload: {} });\n\t\t\t\tconsole.log(result);\n\t\t\t\treturn;\n\n\t\t\tcase \"hilzy\":\n\t\t\t\tpost(wholeHilzy);\n\t\t\t\treturn;\n\n\t\t\tcase \"filters\":\n\t\t\t\tpost(wholeFilters);\n\t\t\t\treturn;\n\n\t\t\tcase \"aroma\":\n\t\t\t\tpost(wholeAroma);\n\t\t\t\treturn;\n\n\t\t\tcase \"mashine\":\n\t\t\t\tpost(wholeMashine);\n\t\t\t\treturn;\n\n\t\t\tdefault:\n\t\t\t\tpost(wholePaper);\n\t\t\t\tpost(wholeHilzy);\n\t\t\t\tpost(wholeFilters);\n\t\t\t\tpost(wholeAroma);\n\t\t\t\tpost(wholeMashine);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// dispatch({ type: FETCH_CARDS, payload: {} });\n\t\t// post(query);\n\t};\n};\n\nexport const changeWidthMenu = (menuWidth) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: MENU_WIDTH, payload: menuWidth });\n\t};\n};\n\nexport const addToCart = (itemCard, cart) => {\n\treturn async (dispatch) => {\n\t\tconst copyItemCard = { ...itemCard };\n\t\t// if (!copyItemCard.available) return;\n\t\tif (cart) {\n\t\t\tlet isInCart = false;\n\t\t\tcart.map((cartItem, index) => {\n\t\t\t\tif (cartItem.id === copyItemCard.id) {\n\t\t\t\t\tconst newCart = [...cart];\n\t\t\t\t\tcopyItemCard.available && (newCart[index].amount += 1);\n\t\t\t\t\tdispatch({ type: CHANGE_AMOUNT, payload: newCart });\n\t\t\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t\t\t\tisInCart = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!isInCart) {\n\t\t\t\tcopyItemCard.available && (copyItemCard.amount += 1);\n\t\t\t\tdispatch({ type: PUSH_ITEM_CART, payload: copyItemCard });\n\t\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t\t}\n\t\t} else {\n\t\t\tcopyItemCard.available && (copyItemCard.amount += 1);\n\t\t\tdispatch({ type: PUSH_ITEM_CART, payload: copyItemCard });\n\t\t\tdispatch({ type: COUNT_TOTAL });\n\t\t}\n\t};\n};\n\nexport const changeAmount = (inputValue, cart, index) => {\n\treturn async (dispatch) => {\n\t\tlet counter = 0;\n\t\tconst newCart = cart;\n\t\tinputValue === \"\" ? (inputValue = 0) : (inputValue = +inputValue);\n\t\tnewCart[index].amount = inputValue;\n\t\tdispatch({ type: CHANGE_AMOUNT, payload: newCart });\n\t\tdispatch({ type: COUNT_TOTAL });\n\t};\n};\n\nexport const delFromCart = (cart, index) => {\n\treturn async (dispatch) => {\n\t\tlet counter = 0;\n\t\tdispatch({ type: DEL_ITEM_CART, payload: index });\n\t\tdispatch({ type: COUNT_TOTAL });\n\t};\n};\n\nexport const changeLocation = (location) => {\n\treturn async (dispatch) => {\n\t\tdispatch({ type: SET_LOCATION, payload: location });\n\t};\n};\n\nexport const addFilter = (filterName) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: ADD_FILTER, payload: filterName });\n\t};\n};\n\nexport const removeFilter = (filterIndex) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: REMOVE_FILTER, payload: filterIndex });\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}