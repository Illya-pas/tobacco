{"ast":null,"code":"var _jsxFileName = \"/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/menuItems/CustomButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(props => ({\n  button: {\n    cursor: \"pointer\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"fit-content\",\n    padding: 5,\n    color: props => props.color,\n    backgroundColor: props => props.backgroundColor\n  }\n}));\nexport default function CustomButton({\n  primary,\n  secondary,\n  text,\n  action,\n  styles,\n  enabled,\n  open\n}) {\n  _s();\n\n  const [props, setProps] = useState({\n    color: primary,\n    backgroundColor: secondary\n  });\n  const [clicked, setClicked] = useState(false);\n  useEffect(() => {\n    enabled && (!open || !clicked) ? setProps({\n      color: secondary,\n      backgroundColor: primary\n    }) : setProps({\n      color: primary,\n      backgroundColor: secondary\n    });\n  }, [open, clicked]);\n  const classes = useStyles(props); // const setHover = () => {\n  // \tsetProps({\n  // \t\tcolor: secondary,\n  // \t\tbackgroundColor: primary,\n  // \t})\n  // }\n  // onMouseEnter={setHover}\n\n  const handleClick = () => {\n    setClicked(!clicked);\n    action && action();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes.button,\n    onClick: () => handleClick(),\n    style: styles,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CustomButton, \"fYozHnyAe11rGzIoR5XlqlbDXk8=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["/home/gh0st/Downloads/PROJECTS/REACT/tobacco/src/components/menuItems/CustomButton.js"],"names":["React","useState","useEffect","makeStyles","useStyles","props","button","cursor","display","justifyContent","alignItems","width","padding","color","backgroundColor","CustomButton","primary","secondary","text","action","styles","enabled","open","setProps","clicked","setClicked","classes","handleClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACtCC,EAAAA,MAAM,EAAE;AACPC,IAAAA,MAAM,EAAE,SADD;AAEPC,IAAAA,OAAO,EAAE,MAFF;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,KAAK,EAAE,aALA;AAMPC,IAAAA,OAAO,EAAE,CANF;AAOPC,IAAAA,KAAK,EAAER,KAAK,IAAIA,KAAK,CAACQ,KAPf;AAQPC,IAAAA,eAAe,EAAET,KAAK,IAAIA,KAAK,CAACS;AARzB;AAD8B,CAAL,CAAN,CAA5B;AAaA,eAAe,SAASC,YAAT,CAAsB;AACpCC,EAAAA,OADoC;AAEpCC,EAAAA,SAFoC;AAGpCC,EAAAA,IAHoC;AAIpCC,EAAAA,MAJoC;AAKpCC,EAAAA,MALoC;AAMpCC,EAAAA,OANoC;AAOpCC,EAAAA;AAPoC,CAAtB,EAQb;AAAA;;AAED,QAAM,CAACjB,KAAD,EAAQkB,QAAR,IAAoBtB,QAAQ,CAAC;AAClCY,IAAAA,KAAK,EAAEG,OAD2B;AAElCF,IAAAA,eAAe,EAAEG;AAFiB,GAAD,CAAlC;AAKA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,KAAK,CAACC,IAAD,IAAS,CAACE,OAAf,CAAR,GACED,QAAQ,CAAC;AACTV,MAAAA,KAAK,EAAEI,SADE;AAETH,MAAAA,eAAe,EAAEE;AAFR,KAAD,CADV,GAKGO,QAAQ,CAAC;AACVV,MAAAA,KAAK,EAAEG,OADG;AAEVF,MAAAA,eAAe,EAAEG;AAFP,KAAD,CALX;AASA,GAVQ,EAUN,CAACK,IAAD,EAAOE,OAAP,CAVM,CAAT;AAYC,QAAME,OAAO,GAAGtB,SAAS,CAACC,KAAD,CAAzB,CArBA,CAuBA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAMsB,WAAW,GAAG,MAAM;AACzBF,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAL,IAAAA,MAAM,IAAIA,MAAM,EAAhB;AACA,GAHD;;AAKD,sBACC;AAAM,IAAA,SAAS,EAAEO,OAAO,CAACpB,MAAzB;AACC,IAAA,OAAO,EAAE,MAAMqB,WAAW,EAD3B;AAEC,IAAA,KAAK,EAAEP,MAFR;AAAA,cAIEF;AAJF;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;GArDuBH,Y;UA6BNX,S;;;KA7BMW,Y","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(props => ({\n\tbutton: {\n\t\tcursor: \"pointer\",\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\twidth: \"fit-content\",\n\t\tpadding: 5,\n\t\tcolor: props => props.color,\n\t\tbackgroundColor: props => props.backgroundColor,\n\t}\n}))\n\nexport default function CustomButton({\n\tprimary,\n\tsecondary,\n\ttext,\n\taction,\n\tstyles,\n\tenabled,\n\topen\n}){\n\n\tconst [props, setProps] = useState({\n\t\tcolor: primary,\n\t\tbackgroundColor: secondary,\n\t})\n\n\tconst [clicked, setClicked] = useState(false)\n\n\tuseEffect(() => {\n\t\t(enabled && (!open || !clicked))\n\t\t? setProps({\n\t  \tcolor: secondary,\n\t  \tbackgroundColor: primary,\n\t  })\n\t  : setProps({\n\t  \tcolor: primary,\n\t  \tbackgroundColor: secondary,\n\t  })\n\t}, [open, clicked])\n\n  const classes = useStyles(props);\n\n  // const setHover = () => {\n  // \tsetProps({\n  // \t\tcolor: secondary,\n  // \t\tbackgroundColor: primary,\n  // \t})\n  // }\n\n  // onMouseEnter={setHover}\n\n  const handleClick = () => {\n  \tsetClicked(!clicked)\n  \taction && action()\n  }\n\n\treturn (\n\t\t<span className={classes.button}\n\t\t\tonClick={() => handleClick()}\n\t\t\tstyle={styles}\n\t\t>\n\t\t\t{text}\n\t\t</span>\n\t)\n}"]},"metadata":{},"sourceType":"module"}